##                                                      -*- shell-script -*-
## .shellrc  -- global shell configuration file
## Copyright 2004-2006 by Michal Nazarewicz (mina86@mina86.com)
## $Id: shellrc,v 1.7 2007/08/08 13:32:12 mina86 Exp $
##

# Not interactive?
[ X"${-#*i}" != X"$-" ] || return

# Hostname
if [ -z "$HOST" ]; then
	HOST="$(hostname)"
	HOST="${HOST%%.*}"
fi
_hostname=X"$HOST"
if [ "$_hostname" = Xikar ]; then _hostname=Xdedal; fi

umask 0077


##
## OHFG! id doesn't work as it should under Solaris
##
if [ "$_hostname" = Xdedal ] || [ "$_hostname" = Xmion ]; then
	# This function is a little wrapper for id command. It's not POSIX
	# compatible but have some features which make it behave almost
	# like modern POSIX id utility. It understends fallowing arguments:
	# id [ -u | -un | -g | -gn ] [ user ].  Anything else will be
	# passed directly to system id utility.
	id () {
		if [ $# -gt 2 ]; then /bin/id "$@"; return; fi

		case "$1" in
		(-u ) shift; /bin/id "$@" | sed 's/^uid=\([1-9][0-9]*\)(.*/\1/' ;;
		(-un) shift; /bin/id "$@" | sed 's/^uid=[^(]*(\([^)]*\)).*/\1/' ;;
		(-g ) shift; /bin/id "$@" | sed 's/^gid=\([1-9][0-9]*\)(.*/\1/' ;;
		(-gn) shift; /bin/id "$@" | sed 's/^gid=[^(]*(\([^)]*\)).*/\1/' ;;
		(*)          /bin/id "$@"                                       ;;
		esac
	}
fi



##
## Some basic variables
##
[ -n "$UID" ] || UID="$(id -u)"
if [ -z "$USER" ]; then
	if [ -n "$LOGNAME" ]
	then USER="$LOGNAME"
	else USER="$(id -un)"
	fi
fi
[ -n "$LOGNAME" ] || LOGNAME="$USER"
[ -n "$HOME" ] || HOME="$(eval echo ~"$USER")"



##
## make and change directory
##
md () {
	if [ $# -eq 0 ]
	then echo usage: 'md dir [ dir ... ]'; return 1
	elif [ $# -eq 1 ]
	then mkdir -p -- "$1" && cd -- "$1"
	else mkdir -p -- "$@"
	fi
}



##
## Prompt
##

# Default prompt (most likely will be overwritten)
if [ X"$UID" = X0 ]; then PS1='# '; else export PS1='$ '; fi
if [ -n "$SSH_CLIENT$SSH_CONNECTION" ]; then PS1="[$(hostname)]$PS1"; fi
export PS1


# Add title to terminals
case "$TERM" in xterm*|rxvt*)
	printf '\033]2;%s@%s\07' "$USER" "$HOST"
esac



##
## Aliases
##

# Ikar, Dedal & Mion keep GNU ls in /usr/local/bin/ls
if [ -x /usr/local/bin/ls ]; then
	alias ls='LANG=C /usr/local/bin/ls $LS_OPTIONS'
else
	alias ls="LANG=C ls $LS_OPTIONS"
fi


# Other
if which run-emacs >/dev/null 2>&1; then
	alias e="run-emacs"
fi
alias mb=mv      # common typo
alias rmd=rmdir
if which mpc >/dev/null 2>&1; then
	alias mpc="mpc --format '[[[%artist% <&%album%> ]|[%artist% - ]|[<%album%> ]]%title%]|[%file%]'"
fi


# Links and ELinks
ELINKS=`which elinks 2>/dev/null`
LINKS=`which links 2>/dev/null`
if [ -n "$ELINKS" ]; then
	alias links="$ELINKS"
elif [ -n "$LINKS" ]; then
	alias elinks="$LINKS"
fi
unset ELINKS LINKS


# LaTeX
TEX=`which platex 2>/dev/null`
[ -n "$TEX" ] || TEX=`which latex 2>/dev/null`
[ -n "$TEX" ] || TEX=`which tex 2>/dev/null`
if [ -z "$TEX" ]; then
	unset TEX
else
	export TEX
fi


# Perl stuff
pf () {
	if [ $# -eq 0 ]; then perldoc perlfunc; else perldoc -f "$@"; fi
}

pd () {
	if   [ $# -eq 0              ]; then perldoc perl
	elif [ X"$1" != X"${1#*::}"  ]; then perldoc "$@"
	elif [ X"$1" != X"${1#-}"    ]; then perldoc "$@"
	elif [ X"$1" != X"${1#perl}" ]; then perldoc "$@"
	else                                 perldoc perl"$1"
	fi
}




##
## TODO List
##
if [ -f .todo ]; then
	todo () {
		case "${1-view}" in
		(-c|clearview) clear; todo -v ;;
		(-v|view) cat ~/.todo ;;
		(-e|edit) "${EDITOR-${VISUAL-vi}}" ~/.todo ;;
		(-d|delete) : >~/.todo ;;
		esac
	}
	_todo=defined
fi



##
## Variables
##

# For setting flags
if [ -e ~/bin/flags-do ]; then
	flags () {
		. ~/bin/flags-do "$@"
	}
fi


# No need to set it once again
if [ -n "$MINA86RC" ]; then
	unset _hostname
	return
fi
export MINA86RC=done


# PATH
if [ -d "$HOME/bin" ] &&
		! echo "$PATH" | grep -F "$HOME/bin" -F '~/bin' >/dev/null 2>&1
then PATH="$PATH:$HOME/bin"; fi

if [ -d "$HOME/code/tinyapps" ] &&
	! echo "$PATH" | grep -F "$HOME/code/tinyapps" >/dev/null 2>&1
then PATH="$PATH:$HOME/code/tinyapps"; fi

# Remove relative paths
PATH="$(printf %s "$PATH" | sed -e 's~:\(\([^/:][^:]*\)\?:\)*~:~g')"
PATH="${PATH#:}"
PATH="${PATH%:}"


# Editor
if [ -z "$EDITOR" ] && which nano >/dev/null 2>/dev/null
then export EDITOR=nano VISUAL=nano; fi


# less
if [ -n "$LESS" ] || which less >/dev/null 2>/dev/null; then
	export PAGER=less LESS=-M
	if [ -x ~/bin/lesspipe ]; then
		eval $(~/bin/lesspipe --install)
	fi
fi


# CVS
export CVS_RSH=ssh
if [ -d "$HOME/.cvsroot" ]; then
	export CVSROOT="$HOME/.cvsroot"
fi


# Various
if [ "$_hostname" = Xerwin ]; then
	export LANG=pl_PL.ISO8859-2 LC_COLLATE=C LC_MESSAGES=en_GB
#	export __GL_FSAA_MODE=4 __GL_LOG_MAX_ANISO=1 __GL_SYNC_TO_VBLANK=1
elif [ "$_hostname" = Xtuptus ]; then
	export LANG=pl_PL.ISO8859-2 LC_COLLATE=C LC_MESSAGES=en_GB
fi


# Temp  (wierd config for ikar/dedal and mion)
if   [ -d /temp ] && [ -w /temp ]
then export TMP=/temp TEMP=/temp TMPDIR=/temp
elif [ -d /tmp2 ] && [ -w /tmp2 ]
then export TMP=/tmp2 TEMP=/tmp2 TMPDIR=/tmp2
else export TMP=/tmp TEMP=/tmp TMPDIR=/tmp
fi


# LS
if [ -z "$LS_COLORS" ]; then
	if which dircolors >/dev/null 2>&1; then
		if [ -f ~/.dir_colors     ]; then eval `dircolors -b ~/.dir_colors`
		elif [ -f /etc/DIR_COLORS ]; then eval `dircolors -b /etc/DIR_COLORS`
		else                              eval `dircolors -b`
		fi
	elif [ -x ~/bin/dircolors ]; then
		. ~/bin/dircolors
	fi
fi
if [ -z "$LS_OPTIONS" ]; then
	export LS_OPTIONS="-FbT0 --color=auto"
fi


# Compression
export GZIP="-9n"


# Shell config
export FIGNORE=".o:~:.bak"
if [ "$_hostname" = Xerwin ] || [ "$_hostname" = Xtuptus ; then
	unset MAILCHECK MAIL
fi


# Compilation
export CC=gcc CXX=g++
if [ "$_hostname" = Xerwin ] || [ "$_hostname" = Xtuptus ]; then
	export ARCH=i686
	flags init
fi




unset _hostname
