#!/bin/sh
## .xinitrc  -- X init script
## Copyright 2008-2017 by Michal Nazarewicz <mina86@mina86.com>

set -u

has() {
	which "$1" >/dev/null 2>&1
}

exec_xset() {
	exec xset -b -c r rate 250 50 s off +dpms
}

init_screen() {
	if [ -x ~/.local/libexec/xscreen-config ]; then
		~/.local/libexec/xscreen-config
	fi
}

init_kbd() {
	layout=pl,pl
	variant=dvp,
	options=grp:shifts_toggle,grp_led:scroll,nbsp:level3n

	dir=$HOME/.config/xkb
	if [ -e "$dir/symbols/local" ]; then
		layout=local,pl
		setxkbmap -I"$dir" -print >"$dir/keymap/local" \
		          "$layout" "$variant" "$options"
		xkbcomp -w0 -I"$dir" "$dir/keymap/local" "$DISPLAY"
	else
		setxkbmap "$layout" "$variant" "$options"
	fi

	unset dir layout variant options
}

gkrellm_maybe() {
	[ -f "$1" ] && shift && exec gkrellm "$@" &
}

start_gkrellm() {
	gkrellm_maybe ~/.gkrellm2/user-config
	for file in ~/.gkrellm2/user-config_S-*; do
		gkrellm_maybe "$file" -s "${file##*/user-config_S-}"
	done
	unset file
}

exec_background_tasks() {
	spawn() {
		has "$1" && exec "$@" &
	}

	cd /
	init_kbd
	spawn xsettingsd
	spawn xcompmgr
	test -e ~/.config/redshift.conf && spawn redshift
	has gkrellm && start_gkrellm
	exec_xset
}

ssh_agent_running() {
	set -- "$@" "${SSH_AUTH_SOCK:-}"
	test -S "$1" || return 1
	SSH_AUTH_SOCK=$1 ssh-add -l >/dev/null 2>&1
	test $? -ne 2
}

start_wm() {
	export SAWFISH_QUIT_CMD_FILE
	SAWFISH_QUIT_CMD_FILE=$1
	set --

	sock=
	if ! ssh_agent_running; then
		if sock=$(xdg-user-dir RUNTIME)/ssh-agent;
		   ssh_agent_running "$sock"; then
			export SSH_AUTH_SOCK
			SSH_AUTH_SOCK=$sock
			sock=
		else
			test -e "$sock" && rm -- "$sock"
			set -- ssh-agent -a "$sock"
		fi
	fi

	cd ~ || exit 1
	if has sawfish; then
		set -- "$@" sawfish
	else
		echo '!!!'
		echo '!!! Sawfish not found; running xterm instead.'
		echo '!!!'
		set -- "$@" xterm
	fi
	"$@"

	if ssh_agent_running "$sock"; then
		rm -- "$sock"
	fi
	unset sock
}

exec_quit_cmd() {
	case ${1-} in
	poweroff|reboot) exec "/sbin/$1" ;;
	reboot-w)        exec /usr/local/sbin/reboot-w
	esac
	exit
}

exec_x() {
	if [ -f ~/.config/Xresources ]; then
		xrdb -merge -D"HOME=$HOME" ~/.config/Xresources
	fi
	init_screen
	exec_background_tasks &

	if has start-pulseaudio-x11; then
		start-pulseaudio-x11
	fi

	tmp=$(mktemp)
	trap 'rm -f -- "$tmp"' 0

	start_wm "$tmp"

	[ -s "$tmp" ] && read -r cmd <"$tmp" || cmd=
	rm -f -- "$tmp"
	trap '' 0

	exec_quit_cmd "$cmd"
}

main() {
	case ${1-} in
	scr|screen)
		shift
		init_screen "$@"
		exec_xset
		;;
	kbd|key)
		shift
		init_kbd "$@"
		exec_xset
		;;
	'')
		dir=${TMPDIR-/tmp}/.sawfish-${USER-anonymous}
		mkdir -p "$dir"
		exec_x "$@" >>"$dir/log${DISPLAY-no-display}" 2>&1
		;;
	*)
		echo "xinit: $1: unrecognised subcommand" >&2
		echo 'usage: xinit (screen | kbd)' >&2
		exit 1
	esac
}

main "$@"
