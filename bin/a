#!/bin/sh

have() {
	have=`which "$1" 2>/dev/null` && test -n "$have"
}

if [ -e /etc/slackware-version ]; then
	cmd=slack
elif  have apt-get || have yum; then
	cmd=$have
else
	echo "a: could not find package manager software" >&2
	exit 1
fi

if [ 0 -eq $(id -u) ]; then
	sudo=
elif have sudo; then
	sudo=sudo
elif have s; then
	sudo=s
else
	echo 'a: s or sudo required' >&2
	exit 1
fi

# If "$1" is not one of the known commands, assume install.  Also do some
# mapping so yum commands look more like apt-get commands.  I have nothing
# against yum but I'm more used to apt-get.
case "${cmd##*/}:$1" in
yum:remove|yum:purge)
	shift
	set -- erase "$@"
	;;

yum:--help)
	shift
	set -- help "$@"
	;;

yum:check | \
yum:check-update | \
yum:clean | \
yum:deplist | \
yum:distribution-synchronization | \
yum:downgrade | \
yum:groupinfo | \
yum:groupinstall | \
yum:grouplist | \
yum:groupremove | \
yum:history | \
yum:info | \
yum:install | \
yum:list | \
yum:load-transaction | \
yum:makecache | \
yum:provides | \
yum:reinstall | \
yum:repolist | \
yum:resolvedep | \
yum:search | \
yum:shell | \
yum:update-minimal | \
yum:updateinfo | \
yum:upgrade | \
yum:help | \
apt-get:install | \
apt-get:remove | \
apt-get:purge | \
apt-get:hold | \
apt-get:unhold | \
apt-get:markauto | \
apt-get:unmarkauto | \
apt-get:forbid-version | \
apt-get:update | \
apt-get:upgrade | \
apt-get:safe-upgrade | \
apt-get:full-upgrade | \
apt-get:forget-new | \
apt-get:search | \
apt-get:show | \
apt-get:clean | \
apt-get:autoclean | \
apt-get:changelog | \
apt-get:download | \
apt-get:reinstall | \
apt-get:why | \
apt-get:why-not)
	;;

yum:?*|apt-get:?*)
	set -- install "$@"
	;;

slack:remove|slack:purge)
	shift
	cmd=removepkg
	;;
slack:upgrade|slack:update)
	shift
	cmd=upgradepkg
	;;
slack:?*.t?z)
	cmd=upgradepkg
	set -- --install-new "$@"
	;;

*)
	echo 'a: do not know what to do' >&2
	exit 1
esac

$sudo "$cmd" "$@"
if [ $# -eq 1 ] && have apt-file && [ x"$1" = xupdate ]; then
	exec $sudo apt-file update
fi
