## .shellrc                                             -*- shell-script -*-
## Copyright 2004-2013 by Michal Nazarewicz (mina86@mina86.com)

# Not interactive?
[ X"${-#*i}" != X"$-" ] || return

# Hostname
if [ -z "$HOST" ]; then
	HOST="$(hostname)"
	HOST="${HOST%%.*}"
fi

## If normal user -> umask 077; if super user -> umask 022
## Also, set TMOUT when super user
if [ $(id -u) -eq 0 ]; then
	umask 0022
	TMOUT=1200
else
	umask 0077
fi

## Some basic variables
[ -n "$UID" ] || UID="$(id -u)"
if [ -z "$USER" ]; then
	if [ -n "$LOGNAME" ]
	then USER="$LOGNAME"
	else USER="$(id -un)"
	fi
fi
[ -n "$LOGNAME" ] || LOGNAME="$USER"
[ -n "$HOME" ] || HOME="$(eval echo ~"$USER")"

# Default prompt (most likely will be overwritten in shell specific rc files)
if [ X"$UID" = X0 ]; then PS1='# '; else export PS1='$ '; fi
if [ -n "$SSH_CLIENT$SSH_CONNECTION" ]; then PS1="[$(hostname)]$PS1"; fi
export PS1

# Add title to terminals
case "$TERM" in xterm*|rxvt*)
	printf '\033]2;%s@%s\07' "$USER" "$HOST"
esac

## Aliases & functions
unalias ls dir vdir ll l 2>/dev/null
alias ls='LANG=C ls $LS_OPTIONS'
alias ll='ls -l'

## make and change directory
unalias md 2>/dev/null
md () {
	if [ $# -eq 0 ]; then
		echo usage: 'md dir [ dir ... ]' >&2
		return 1
	else
		mkdir -p -- "$@" && cd "$1"
	fi
}

## List directory or content of file
l () {
	if [ $# -eq 1 -a -f "$1" ]; then
		less -- "$1"
	elif [ $# -eq 2 -a x"$1" = x-- -a -f "$2" ]; then
		less -- "$2"
	else
		ls "$@"
	fi
}

# Other
alias rmd=rmdir
which mpc >/dev/null 2>&1 && alias mpc="mpc --format '[[[%artist% <&%album%> ]|[%artist% - ]|[<%album%> ]]%title%]|[%file%]'"
alias make='nice make'

# tinyapps stuff
if ! which xrun >/dev/null 2>&1; then
	xrun () { "$@" & }
fi
if which cdiff >/dev/null 2>&1; then
	alias diff=cdiff
fi

# More colors
if echo foo | grep --color=auto foo >/dev/null 2>/dev/null; then
	alias grep='grep --color=auto'
fi
alias fgrep='grep -F'
alias egrep='grep -E'

# For setting flags
if [ -e ~/bin/flags-do ]; then
	unalias flags 2>/dev/null
	flags () {
		. ~/bin/flags-do "$@"
	}
fi

# Powerful cd
_cd_sub() {
	while :; do
		case "$1" in
		*/"$3"/*)
			set -- "${1%/"$3"/*}" "${1##*/"$3"/}$2" "$3" "$4"
			if [ -d "$1/$4/$2" ]; then
				echo "$1/$4/$2"
				\cd "$1/$4/$2"
				return $?
			fi
			set -- "$1/" "$3/$2" "$1" "$2"
			;;
		*)
			echo "cd: $3 not found in $1$2 or resulting path does not point to a directory" >&2
			return 1
		esac
	done
}

_cd_ddd() {
	set -- "${1%/}" "${2#.../}"
	while :; do
		if [ -z "$1" ]; then
			echo "cd: .../$2: could not find path" >&2
			return 1
		fi

		set -- "${1%/*}" "$2"
		if [ -d "$1/$2" ]; then
			echo "$1/$2"
			\cd "$1/$2"
			return $?
		fi
	done
}

_cd_P() {
	set -- "$(pwd -P)"
	echo "$1"
	\cd "$1"
}

_cd() {
	case "$#:$1:$2" in
	1:-h:)
		cat <<EOF
cd -P
    Resolve all symbolic links in \$PWD.
cd [-P] [<dir>]
    Move to <dir>, or home directory if <dir> is not given, or \$OPWD
    if <dir> is "-".  With -P, resolves all symlinks.
cd [-P] <from> <to>
    Replaces right-most occurrence of "/<from>/" with "/<to>/" and
    tries to change CWD to resulting path.  If it does not resolve to
    a directory, tries the next occurrence of "/<from>/" until there
    aren't any more left.  With -P looks at CWD with symlinks resolved.
cd [-P] .../<dir>
    Goes to parent directories until ./<dir> is a valid directory and
    then changes to it.  With -P looks at CWD with symlinks resolved.
EOF
		;;

	0:*)		\cd ;;
	1:-P:)		_cd_P ;;
	1:.../*)	_cd_ddd "$PWD" "$1" ;;
	1:*)		\cd      "$1" ;;
	2:-P:.../*)	_cd_ddd "$(pwd -P)" "$2" ;;
	2:-P:*)		\cd      "$2" >/dev/null && _cd_P ;;
	2:*)		_cd_sub "$PWD" "$1" "$2" ;;
	3:-P:*)		_cd_sub "$(pwd -P)" "$2" "$3" ;;
	*)
		echo "cd: too many arguments" >&2
		return 1
	esac
}
alias cd=_cd


# No need to set it once again
if [ -n "$MINA86RC" ]; then
	return
fi
export MINA86RC=done

# PATH
if ! echo ":$PATH:" | grep -Fe ":$HOME/bin:" -e ':~/bin:' >/dev/null 2>&1; then
	test -d ~/code/tinyapps && PATH="$HOME/code/tinyapps:$PATH"
	test -d ~/bin && PATH="$HOME/bin:$PATH"
	uname_m=`uname -m`
	test -d ~/bin/$uname_m && PATH="$HOME/bin/$uname_m:$PATH"
	unset uname_m
fi

# Remove relative paths
PATH="$(echo ":$PATH:" | sed -e 's~:\(\([^/:][^:]*\)\?:\)*~:~g
s/^::*//
s/::*$//')"
export PATH

# Editor
[ -z "$EDITOR" ] && which nano >/dev/null 2>&1 && export EDITOR=nano VISUAL=nano

# less
if [ -n "$LESS" ] || which less >/dev/null 2>&1; then
	export PAGER=less LESS=-MS
	[ -x ~/bin/lesspipe ] && eval $(~/bin/lesspipe --install-lesspipe)
fi

# Colours in less
export LESS_TERMCAP_md=$'\E[36m'    # begin bold
export LESS_TERMCAP_mb=$'\E[31m'    # begin blinking
export LESS_TERMCAP_us=$'\E[33m'    # begin underline
export LESS_TERMCAP_so=$'\E[38;43m' # begin standout-mode - info box
export LESS_TERMCAP_se=$'\E[0m'     # end standout-mode
export LESS_TERMCAP_ue=$'\E[0m'     # end underline
export LESS_TERMCAP_me=$'\E[0m'     # end mode

# LS options and colors
if [ -z "$LS_COLORS" ] && ls --color / >/dev/null 2>&1; then
	if which dircolors >/dev/null 2>&1; then
		if [ -f ~/.dir_colors     ]; then eval "`dircolors -b ~/.dir_colors`"
		elif [ -f /etc/DIR_COLORS ]; then eval "`dircolors -b /etc/DIR_COLORS`"
		else                              eval "`dircolors -b`"
		fi
	elif [ -x ~/bin/dircolors ]; then
		. ~/bin/dircolors
	fi
fi
LS_OPTIONS="-FT0 --color=auto"
export LS_OPTIONS

# Various
export GZIP="-9n"
export FIGNORE=".o:~:.bak" CC=gcc CXX=g++
export LC_COLLATE=C LC_MESSAGES=en_GB.UTF-8
case "X$HOST" in Xerwin|Xtuptus)
	unset MAILCHECK MAIL
	if [ x"`uname -m`" = xx86_64 ]; then
		export ARCH=x86_64
	else
		export ARCH=i686
	fi
	flags init
esac

if which ccache >/dev/null 2>&1; then
	export CCACHE_COMPRESS=1 CCACHE_LOGFILE=/tmp/ccache.log
	export CCACHE_SLOPPINESS=file_macro,time_macros CCACHE_TEMPDIR=/tmp
	if which distcc >/dev/null 2>&1; then
		export CCACHE_PREFIX=distcc
	fi
fi

## Some local stuff
if [ -e ~/.shell_local ]; then
	. ~/.shell_local
fi
