## .shellrc                                             -*- shell-script -*-

# Not interactive?
[ X"${-#*i}" != X"$-" ] || return

# Hostname
if [ -n "$HOST" ]; then
	HOST="$(which hostname >/dev/null 2>&1)"
	if [ -n "$HOST" ]; then
		HOST=$(hostname)
	else
		# So yeah… My OpenWRT is missing hostname and I don’t quite know
		# where to get it from.  Fortunately it has Python so I can use
		# it.  (It does not have Perl).
		HOST=$(python -c 'import socket; print socket.gethostname()')
	fi
	HOST=${HOST%%.*}
fi

## If normal user -> umask 077; if super user -> umask 022
## Also, set TMOUT when super user
if [ $(id -u) -eq 0 ]; then
	umask 0022
	TMOUT=1200
else
	umask 0077
fi

## Some basic variables
[ -n "$UID" ] || UID="$(id -u)"
if [ -z "$USER" ]; then
	if [ -n "$LOGNAME" ]
	then USER="$LOGNAME"
	else USER="$(id -un)"
	fi
fi
[ -n "$LOGNAME" ] || LOGNAME="$USER"
[ -n "$HOME" ] || HOME="$(eval echo ~"$USER")"

# Default prompt (most likely will be overwritten in shell specific rc files)
if [ X"$UID" = X0 ]; then PS1='# '; else PS1='$ '; fi
case $TERM in xterm*|rxvt*|eterm*|screen*|linux*)
	if [ -n "$SSH_CLIENT$SSH_CONNECTION" ]; then PS1="[$HOST]$PS1"; fi
esac
export PS1

# Add title to terminals
tsl=$(tput tsl 2>/dev/null)
if [ -n "$tsl" ]; then
	PS1=$(printf '%s%s@%s%s%s' "$tsl" "$USER" "$HOST" "$(tput fsl)" "$PS1")
fi
unset tsl

## Aliases & functions
unalias ls dir vdir ll l 2>/dev/null
unset LS_OPTIONS
alias ls='LANG=C ls -FT0 --color=auto'
alias ll='ls -l'

## make and change directory
unalias md 2>/dev/null
md () {
	if [ $# -eq 0 ]; then
		echo usage: 'md dir [ dir ... ]' >&2
		return 1
	else
		mkdir -p -- "$@" && \cd "$1"
	fi
}

## List directory or content of file
l () {
	if [ $# -eq 1 -a -f "$1" ]; then
		less -- "$1"
	elif [ $# -eq 2 -a x"$1" = x-- -a -f "$2" ]; then
		less -- "$2"
	else
		ls "$@"
	fi
}

# Other
alias rmd=rmdir
which mpc >/dev/null 2>&1 && alias mpc="mpc --format '[[[%artist% <&%album%> ]|[%artist% - ]|[<%album%> ]]%title%]|[%file%]'"
alias make='nice make'

if [ -x /usr/bin/ncal ]; then
	ncal() {
		[ $# -gt 0 ] || set -- -B1 -A2
		/usr/bin/ncal -M "$@"
	}
	cal() {
		[ $# -gt 0 ] || set -- -3
		/usr/bin/ncal -Mb "$@"
	}
elif cal -m >/dev/null 2>&1; then
	alias cal='cal -3m'
fi

# tinyapps stuff
if ! which xrun >/dev/null 2>&1; then
	xrun () { "$@" </dev/null >/dev/null 2>&1 & }
fi
if which cdiff >/dev/null 2>&1; then
	alias diff=cdiff
fi

# More colors
if echo foo | grep --color=auto foo >/dev/null 2>/dev/null; then
	alias grep='grep --color=auto'
fi
alias fgrep='grep -F'
alias egrep='grep -E'

# For setting flags
if [ -e ~/bin/flags-do ]; then
	unalias flags 2>/dev/null
	flags () {
		. ~/bin/flags-do "$@"
	}
fi

# Powerful cd
_cd_do() {
	if [ x"$2" != x- ] && [ -e "$2" ] && ! [ -d "$2" ]; then
		set -- "$1" "$(dirname $2)"
	fi
	builtin cd "$@"
}

cd() {
	if [ "$1" == -- ]; then
		shift
	fi
	case "$#:$1" in
	1:-h)
		cat <<EOF
cd
    Move to home directory.
cd -P
    Resolve all symbolic links in \$PWD.
cd [-P] (<dir> | <file> | -)
    Move to <dir>, dirname(<file>), or \$OLDPWD; -P resolves all symlinks.
cd [-P] (<dir> | <file> | -) <command> [<args> ...]
    Run <command> in the directory and then come back.
EOF
		;;
	0:)
		builtin cd
		;;
	1:-P)
		builtin cd -P "${PWD}"
		;;
	1:*)
		_cd_do "-L" "$1"
		;;
	2:-P)
		_cd_do "-P" "$2"
		;;
	*)
		if [ x"$1" != x-P ]; then
			set -- -L "$@"
		fi
		( _cd_do "$1" "$2" && shift 2 && "$@" )
	esac
}
alias -- -='builtin cd -'

# Git
alias +='git add'
alias +u='git add -u'
alias +p='git add -p'

# Other
alias @='for i in'

,() {
	if [ $# -eq 0 ]; then
		paste -sd,
	else
		printf "%s\n" "$@" | paste -sd,
	fi
}

alias py=python
alias pl=perl


# No need to set it once again
if [ -n "$MINA86RC" ]; then
	return
fi
MINA86RC=done
export MINA86RC

# PATH
case ":$PATH:" in
*:"$HOME/bin":*|*:"~/bin":*|*:"$HOME/.local/bin":*|*:"~/.local/bin":*)
	: ;;
*)
	if [ -d ~/code/tinyapps ]; then
		PATH="$HOME/code/tinyapps:$PATH"
	fi
	if [ -d ~/.local/bin ]; then
		PATH="$HOME/.local/bin:$PATH"
	elif [ -d ~/bin ]; then
		PATH="$HOME/bin:$PATH"
	fi
esac

# Remove relative paths
PATH="$(echo ":$PATH:" | sed -e 's~:\(\([^/:][^:]*\)\?:\)*~:~g
s/^::*//
s/::*$//')"
export PATH

# Editor
if [ -z "$EDITOR" ] && which nano >/dev/null 2>&1; then
	EDITOR=nano
	VISUAL=nano
	export EDITOR VISUAL
fi

# less
if [ -n "$LESS" ] || which less >/dev/null 2>&1; then
	PAGER=less
	LESS=-MS
	export PAGER LESS
	[ -x ~/bin/lesspipe ] && eval $(~/bin/lesspipe --install-lesspipe)
fi

# Colours in less
if which tput >/dev/null 2>&1; then
	LESS_TERMCAP_md=$(tput setaf 2)   # begin bold
	LESS_TERMCAP_mb=$(tput setaf 1)   # begin blinking
	LESS_TERMCAP_us=$(tput setaf 6)   # begin underline
	LESS_TERMCAP_so=$(tput setab 3)   # begin stand-out-mode - info box
	LESS_TERMCAP_se=$(tput sgr0)      # end stand-out-mode
	LESS_TERMCAP_ue=$LESS_TERMCAP_se  # end underline
	LESS_TERMCAP_me=$LESS_TERMCAP_se  # end mode
else
	esc=$(printf \\33)
	LESS_TERMCAP_md=$esc'[36m'        # begin bold
	LESS_TERMCAP_mb=$esc'[31m'        # begin blinking
	LESS_TERMCAP_us=$esc'[33m'        # begin underline
	LESS_TERMCAP_so=$esc'[38;43m'     # begin stand-out-mode - info box
	LESS_TERMCAP_se=$esc'[0m'         # end stand-out-mode
	LESS_TERMCAP_ue=$esc'[0m'         # end underline
	LESS_TERMCAP_me=$esc'[0m'         # end mode
	unset esc
fi
export LESS_TERMCAP_md LESS_TERMCAP_mb LESS_TERMCAP_us LESS_TERMCAP_so
export LESS_TERMCAP_se LESS_TERMCAP_ue LESS_TERMCAP_me

# LS colors
if [ -z "$LS_COLORS" ] && [ -f ~/.dir_colors ]; then
	eval "$(dircolors -b ~/.dir_colors)"
fi

# Various
FIGNORE=".o:~:.bak"
CC=gcc
CXX=g++
LC_COLLATE=C
LANG=en_GB.UTF-8
LC_MESSAGES=en_GB.UTF-8
export FIGNORE CC CXX LANG LC_COLLATE LC_MESSAGES
unset MAILCHECK MAIL
case "X$HOST" in Xerwin|Xtuptus)
	if [ x"`uname -m`" = xx86_64 ]; then
		ARCH=x86_64
	else
		ARCH=i686
	fi
	export ARCH
	flags init
esac

if which ccache >/dev/null 2>&1; then
	CCACHE_COMPRESS=1
	CCACHE_LOGFILE=/tmp/ccache.log
	CCACHE_SLOPPINESS=file_macro,time_macros
	CCACHE_TEMPDIR=/tmp
	if which distcc >/dev/null 2>&1; then
		CCACHE_PREFIX=distcc
		export CCACHE_PREFIX
	fi
	export CCACHE_COMPRESS CCACHE_LOGFILE CCACHE_SLOPPINESS CCACHE_TEMPDIR
fi

# Some local stuff
if [ -e ~/.config/sh/local ]; then
	. ~/.config/sh/local
fi
